%% Homodyne Reconstruction Demo
clear;
close all;
clc

%% single-channel T2-weighted data
load 'T2_single_channel' % Image borrowed from package https://mr.usc.edu/download/loraks2/
kspace = kData;  % K space
[nvx nvy] = size(kspace);


%% single-channel Baseline Cardiac Image
load 'Cardiac_FS_Image' 
kspace = Cardiac_FS_image;
[nvx nvy] = size(kspace);

%% Reference Image
im_ref = ifft2c(kspace);
figure(1);
    subplot(2,3,1);
    imagesc(abs(im_ref.'));    
    display();
    title('Reference');
    
%% Homodyne Reconstruction
[im_zf im_recon Phi] = PF_homodyne(kspace, 20);

%% Zeros-filled Reconstruction
    subplot(2,3,2);
    imagesc(abs(im_zf.'));  % KN:  naming should be im_zf and im_ho rather than the other way around.. so that they are togetehr in the data browser
    display();
    title('Zero filled');   

%% Error of Zero-filled Reconstruction
    subplot(2,3,3);
    imagesc(abs((im_ref-im_zf).'));  % KN:  naming should be im_zf and im_ho rather than the other way around.. so that they are togetehr in the data browser
    display();
    title('Error'); 
    
%% Homodyne Recon  
    subplot(2,3,4);
    imagesc(abs(im_recon.'));  % KN:  naming should be im_zf and im_ho rather than the other way around.. so that they are togetehr in the data browser
    display();
    title('Homodyne');   

    subplot(2,3,6);
    imagesc(abs(Phi.*im_recon - im_ref).');  % KN:  needs to be fixed.  abs removes phase!
    display();
    title('Error Homodyne');


    
Recon_Im = HM_Func(kspace1(:,:,3,3),mask); % KN:  function names should not have "Func" as that can be assumed.  Use full name like PF_Homodyne.m PF_POCS.m etc. to signify Partial Fourier reconstrucgtion with a specific implementation

% Reference_im = (Reference_im.*exp(-1j*angle(ifft2c(kspace(:,:,3,3))))); %Phase of low-res image
% Recon_Im = pocs(kspace1(:,:,3,3),[],[],mask);
    subplot(2,3,3);
    imagesc(abs(Recon_Im.'));
    display();
    title('Homodyne');
    
    subplot(2,3,5);
    imagesc(abs(ZF_im - Reference_im).');  % KN:  needs to be fixed.  abs removes phase!
    display();
    title('Error Zero Filled');
    
    subplot(2,3,6);
    imagesc(abs(Phase.*Recon_Im - Reference_im).');  % KN:  needs to be fixed.  abs removes phase!
    display();
    title('Error Homodyne');
    

for idy=1:1:nc
    for idx = 1:nt
    if idx ~= 1 || idx ~= 2            
    Data_G = (kspace1(:,:,idy,idx)); % nvx x nvy x nc 
    Rec_Hom(:,:,idy,idx) = HM_Func(Data_G, mask);
    end
    if idx == 1 || idx == 2     %% First or second image are not under-sampled 
          Rec_Hom(:,:,idy,idx) = ifft2c(kspace1(:,:,idy,idx));
          Rec_Hom(:,:,idy,idx) = ifft2c(kspace1(:,:,idy,idx));
    end
    end
end

cmaps = senseMap(Rec_Hom(:,:,:,1), 7);  %estimates coil sensitivity maps from the images
for idx=1:nt
         ImgR(:,:,idx) = senseR1(Rec_Hom(:,:,:,idx), cmaps, eye(nc));
end
figure;imagesc(abs(ImgR(:,:,3))); axis off;axis square;colormap gray;title('Coil Combined Image');
% end


